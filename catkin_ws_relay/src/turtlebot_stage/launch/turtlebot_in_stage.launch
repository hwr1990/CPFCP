<!-- 
  Turtlebot navigation simulation:
  - stage
  - map_server
  - move_base
  - static map
  - amcl
  - rviz view
 -->
<launch>
  <arg name="base"       default="$(optenv TURTLEBOT_BASE kobuki)"/>  <!-- create, rhoomba -->
  <arg name="stacks"     default="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
<!--  <arg name="3d_sensor"  default="$(optenv TURTLEBOT_3D_SENSOR kinect)"/> -->  <!-- kinect, asus_xtion_pro -->

  <!-- Name of the map to use (without path nor extension) and initial position -->
  <arg name="map_file"       default=" $(env TURTLEBOT_STAGE_MAP_FILE)"/> <!-- robopark_plan -->
  <arg name="world_file"     default=" $(env TURTLEBOT_STAGE_WORLD_FILE)"/>
  <arg name="initial_pose_x" default="2.0"/>
  <arg name="initial_pose_y" default="2.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  <param name="/use_sim_time" value="true"/>
  <!--  ******************** Stage ********************  -->
  <!-- 
        Publishes transforms:
          /base_link -> /base_laser
          /base_footprint -> /base_link (identity)
          /odom -> base_footprint
        Publishes topics:
          /odom : odometry data from the simulated odometry
          /base_scan : laser data from the simulated laser
          /base_pose_ground_truth : the ground truth pose
        Parameters:
          base_watchdog_timeout : time (s) after receiving the last command on cmd_vel before stopping the robot
        Args:
          -g : run in headless mode.
  --> 
  <node pkg="stage_ros" type="stageros" name="stageros" args="$(arg world_file)">
    <param name="base_watchdog_timeout" value="0.5"/>
    <remap from="odom" to="odom"/>
    <remap from="base_pose_ground_truth" to="base_pose_ground_truth"/>
    <remap from="cmd_vel" to="mobile_base/commands/velocity"/>
    <remap from="base_scan" to="scan"/>
  </node>

<!--  ******************** robots/cmd_vel pub ********************  -->


<!--  <node pkg="turtlebot_stage" type="boid0" name="boid0">
  <remap from="/robot/cmd_vel" to="/robot_0/cmd_vel"/>
  </node>

  <node pkg="turtlebot_stage" type="boid1" name="boid1"> 
  <remap from="/robot/cmd_vel" to="/robot_1/cmd_vel"/>
  </node> 

  <node pkg="turtlebot_stage" type="boid2" name="boid2">
  <remap from="/robot/cmd_vel" to="/robot_2/cmd_vel"/>
  </node> -->
  <node pkg="turtlebot_stage" type="talker_leader" name="MA0"> 
	<remap from="/robot/cmd_vel" to="/robot_0/cmd_vel" />
	<remap from="ground_truth_state" to="/robot_0/base_pose_ground_truth" />
	<remap from="nb1_ground_truth_state" to="/robot/myAgentState" />

	<remap from="myAgentState" to="/robot/myAgentState" />

        <param name="uID" type="int" value="0" />
        <param name="initRole" type="int" value="3" />
  </node> 
  <node pkg="turtlebot_stage" type="talker_leader" name="MA1"> 
	<remap from="/robot/cmd_vel" to="/robot_1/cmd_vel" />
	<remap from="ground_truth_state" to="/robot_1/base_pose_ground_truth" />
	<remap from="nb1_ground_truth_state" to="/robot/myAgentState" />

	<remap from="myAgentState" to="/robot/myAgentState" />

        <param name="uID" type="int" value="1" />
        <param name="initRole" type="int" value="1" />
  </node>
  <node pkg="turtlebot_stage" type="talker_leader" name="MA2"> 
	<remap from="/robot/cmd_vel" to="/robot_2/cmd_vel" />
	<remap from="ground_truth_state" to="/robot_2/base_pose_ground_truth" />
	<remap from="nb1_ground_truth_state" to="/robot/myAgentState" />

	<remap from="myAgentState" to="/robot/myAgentState" />

        <param name="uID" type="int" value="2" />
        <param name="initRole" type="int" value="1" />
  </node> 
  <node pkg="turtlebot_stage" type="talker_leader" name="MA3"> 
	<remap from="/robot/cmd_vel" to="/robot_3/cmd_vel" />
	<remap from="ground_truth_state" to="/robot_3/base_pose_ground_truth" />
	<remap from="nb1_ground_truth_state" to="/robot/myAgentState" />

	<remap from="myAgentState" to="/robot/myAgentState" />

        <param name="uID" type="int" value="3" />
        <param name="initRole" type="int" value="1" />
  </node>
  <node pkg="turtlebot_stage" type="talker_leader" name="MA4"> 
	<remap from="/robot/cmd_vel" to="/robot_4/cmd_vel" />
	<remap from="ground_truth_state" to="/robot_4/base_pose_ground_truth" />
	<remap from="nb1_ground_truth_state" to="/robot/myAgentState" />

	<remap from="myAgentState" to="/robot/myAgentState" />

        <param name="uID" type="int" value="4" />
        <param name="initRole" type="int" value="1" />
  </node> 

  <node pkg="turtlebot_stage" type="talker_leader" name="MA5"> 
	<remap from="/robot/cmd_vel" to="/robot_5/cmd_vel" />
	<remap from="ground_truth_state" to="/robot_5/base_pose_ground_truth" />
	<remap from="nb1_ground_truth_state" to="/robot/myAgentState" />

	<remap from="myAgentState" to="/robot/myAgentState" />

        <param name="uID" type="int" value="5" />
        <param name="initRole" type="int" value="1" />
  </node>

  <node pkg="turtlebot_stage" type="talker_leader" name="MA6"> 
	<remap from="/robot/cmd_vel" to="/robot_6/cmd_vel" />
	<remap from="ground_truth_state" to="/robot_6/base_pose_ground_truth" />
	<remap from="nb1_ground_truth_state" to="/robot/myAgentState" />

	<remap from="myAgentState" to="/robot/myAgentState" />

        <param name="uID" type="int" value="6" />
        <param name="initRole" type="int" value="1" />
  </node>

  <node pkg="turtlebot_stage" type="talker_leader" name="MA7"> 
	<remap from="/robot/cmd_vel" to="/robot_7/cmd_vel" />
	<remap from="ground_truth_state" to="/robot_7/base_pose_ground_truth" />
	<remap from="nb1_ground_truth_state" to="/robot/myAgentState" />

	<remap from="myAgentState" to="/robot/myAgentState" />

        <param name="uID" type="int" value="7" />
        <param name="initRole" type="int" value="1" />
  </node>

  <node pkg="turtlebot_stage" type="talker_leader" name="MA8"> 
	<remap from="/robot/cmd_vel" to="/robot_8/cmd_vel" />
	<remap from="ground_truth_state" to="/robot_8/base_pose_ground_truth" />
	<remap from="nb1_ground_truth_state" to="/robot/myAgentState" />

	<remap from="myAgentState" to="/robot/myAgentState" />

        <param name="uID" type="int" value="8" />
        <param name="initRole" type="int" value="1" />
  </node>

</launch>
